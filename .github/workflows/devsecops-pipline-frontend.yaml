name: DevSecOps Pipeline Frontend-app

env:
  BUILD_NUMBER: ${{ github.run_number }}
  IMAGE_NAME: frontend-image
  VITE_API_URL: http://localhost:3001

on:
  push:
    branches:
      - main

jobs:
  test-job:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --force

      - name: Run unit tests
        run: npm test

  # sast-scan:
  #   runs-on: ubuntu-latest
  #   needs: test-job
  #   timeout-minutes: 10
  #   env:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     SONAR_HOST_URL: https://sonarcloud.io
  #   steps:
  #     - name: Clone Source Code
  #       uses: actions/checkout@v4

  #     - name: Run Semgrep (SAST)
  #       uses: returntocorp/semgrep-action@v1
  #       with:
  #         config: "p/default"

  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarqube-scan-action@v5
  #       with:
  #         args: >
  #           -Dsonar.projectKey=salma1-spec_frontend-app
  #           -Dsonar.organization=salma1-spec
  #           -Dsonar.sources=src
  #           -Dsonar.branch.name=main

  # sca-scan:
  #   runs-on: ubuntu-latest
  #   needs: test-job
  #   timeout-minutes: 10
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Run OWASP Dependency-Check
  #       uses: dependency-check/Dependency-Check_Action@main
  #       with:
  #         project: "frontend-app"
  #         path: "."
  #         format: "ALL"
  #         out: "reports"
  #         args: "--noupdate"

  #     - name: Upload dependency-check report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dependency-check-report
  #         path: reports/dependency-check-report.html

  docker-image-scan:
    runs-on: ubuntu-latest
    # needs: [sast-scan, sca-scan]
    timeout-minutes: 10
    steps:
      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }} --build-arg VITE_API_URL=${{ env.VITE_API_URL }} .

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          exit-code: 0
          ignore-unfixed: true

  build-and-push-job:
    runs-on: ubuntu-latest
    needs: docker-image-scan
    timeout-minutes: 10
    steps:
      - name: Clone Source Code 
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }} --build-arg VITE_API_URL=${{ env.VITE_API_URL }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag Docker Image with Specific Version
        run: docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}

      - name: Push Docker Image with Specific Version
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}

      - name: Tag Docker Image with Latest Version
        run: docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker Image with Latest Version
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Pr√©parer les permissions du dossier ZAP
        run: |
          sudo mkdir -p /zap/wrk
          sudo chmod -R 777 /zap/wrk

  zap_scan:
    runs-on: ubuntu-latest
    needs: build-and-push-job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.6.0
        with:
          token: ${{ secrets.TOKEN }}
          target: 'https://salma-store.onrender.com'
          cmd_options: '-r zap-report.html'
          fail_action: true
          allow_issue_writing: false
          artifact_name: zap-report

      - name: Upload ZAP Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html